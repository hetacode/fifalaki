// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ProtoContracts/WordsServices.proto

package proto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type GetWordsPackageReq struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetWordsPackageReq) Reset()         { *m = GetWordsPackageReq{} }
func (m *GetWordsPackageReq) String() string { return proto.CompactTextString(m) }
func (*GetWordsPackageReq) ProtoMessage()    {}
func (*GetWordsPackageReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_5843ef82956e2d9a, []int{0}
}

func (m *GetWordsPackageReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetWordsPackageReq.Unmarshal(m, b)
}
func (m *GetWordsPackageReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetWordsPackageReq.Marshal(b, m, deterministic)
}
func (m *GetWordsPackageReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetWordsPackageReq.Merge(m, src)
}
func (m *GetWordsPackageReq) XXX_Size() int {
	return xxx_messageInfo_GetWordsPackageReq.Size(m)
}
func (m *GetWordsPackageReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetWordsPackageReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetWordsPackageReq proto.InternalMessageInfo

type GetWordsPackageRes struct {
	Words                []string `protobuf:"bytes,1,rep,name=words,proto3" json:"words,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetWordsPackageRes) Reset()         { *m = GetWordsPackageRes{} }
func (m *GetWordsPackageRes) String() string { return proto.CompactTextString(m) }
func (*GetWordsPackageRes) ProtoMessage()    {}
func (*GetWordsPackageRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_5843ef82956e2d9a, []int{1}
}

func (m *GetWordsPackageRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetWordsPackageRes.Unmarshal(m, b)
}
func (m *GetWordsPackageRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetWordsPackageRes.Marshal(b, m, deterministic)
}
func (m *GetWordsPackageRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetWordsPackageRes.Merge(m, src)
}
func (m *GetWordsPackageRes) XXX_Size() int {
	return xxx_messageInfo_GetWordsPackageRes.Size(m)
}
func (m *GetWordsPackageRes) XXX_DiscardUnknown() {
	xxx_messageInfo_GetWordsPackageRes.DiscardUnknown(m)
}

var xxx_messageInfo_GetWordsPackageRes proto.InternalMessageInfo

func (m *GetWordsPackageRes) GetWords() []string {
	if m != nil {
		return m.Words
	}
	return nil
}

func init() {
	proto.RegisterType((*GetWordsPackageReq)(nil), "proto.GetWordsPackageReq")
	proto.RegisterType((*GetWordsPackageRes)(nil), "proto.GetWordsPackageRes")
}

func init() { proto.RegisterFile("ProtoContracts/WordsServices.proto", fileDescriptor_5843ef82956e2d9a) }

var fileDescriptor_5843ef82956e2d9a = []byte{
	// 138 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x52, 0x0a, 0x28, 0xca, 0x2f,
	0xc9, 0x77, 0xce, 0xcf, 0x2b, 0x29, 0x4a, 0x4c, 0x2e, 0x29, 0xd6, 0x0f, 0xcf, 0x2f, 0x4a, 0x29,
	0x0e, 0x4e, 0x2d, 0x2a, 0xcb, 0x4c, 0x4e, 0x2d, 0xd6, 0x2b, 0x00, 0x49, 0x0a, 0xb1, 0x82, 0x29,
	0x25, 0x11, 0x2e, 0x21, 0xf7, 0xd4, 0x12, 0xb0, 0x82, 0x80, 0xc4, 0xe4, 0xec, 0xc4, 0xf4, 0xd4,
	0xa0, 0xd4, 0x42, 0x25, 0x2d, 0x2c, 0xa2, 0xc5, 0x42, 0x22, 0x5c, 0xac, 0xe5, 0x20, 0x21, 0x09,
	0x46, 0x05, 0x66, 0x0d, 0xce, 0x20, 0x08, 0xc7, 0x28, 0x9c, 0x8b, 0x07, 0xd9, 0x7c, 0x21, 0x77,
	0x2e, 0x7e, 0x34, 0xbd, 0x42, 0x92, 0x10, 0x3b, 0xf5, 0x30, 0x6d, 0x92, 0xc2, 0x29, 0x55, 0xec,
	0x24, 0xb8, 0x8a, 0x89, 0x0f, 0xd5, 0x23, 0x49, 0x6c, 0x60, 0xc5, 0xc6, 0x80, 0x00, 0x00, 0x00,
	0xff, 0xff, 0x82, 0x6b, 0xd4, 0x2b, 0xe1, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// WordsServiceClient is the client API for WordsService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type WordsServiceClient interface {
	GetWordsPackage(ctx context.Context, in *GetWordsPackageReq, opts ...grpc.CallOption) (*GetWordsPackageRes, error)
}

type wordsServiceClient struct {
	cc *grpc.ClientConn
}

func NewWordsServiceClient(cc *grpc.ClientConn) WordsServiceClient {
	return &wordsServiceClient{cc}
}

func (c *wordsServiceClient) GetWordsPackage(ctx context.Context, in *GetWordsPackageReq, opts ...grpc.CallOption) (*GetWordsPackageRes, error) {
	out := new(GetWordsPackageRes)
	err := c.cc.Invoke(ctx, "/proto.WordsService/GetWordsPackage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// WordsServiceServer is the server API for WordsService service.
type WordsServiceServer interface {
	GetWordsPackage(context.Context, *GetWordsPackageReq) (*GetWordsPackageRes, error)
}

// UnimplementedWordsServiceServer can be embedded to have forward compatible implementations.
type UnimplementedWordsServiceServer struct {
}

func (*UnimplementedWordsServiceServer) GetWordsPackage(ctx context.Context, req *GetWordsPackageReq) (*GetWordsPackageRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetWordsPackage not implemented")
}

func RegisterWordsServiceServer(s *grpc.Server, srv WordsServiceServer) {
	s.RegisterService(&_WordsService_serviceDesc, srv)
}

func _WordsService_GetWordsPackage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetWordsPackageReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WordsServiceServer).GetWordsPackage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.WordsService/GetWordsPackage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WordsServiceServer).GetWordsPackage(ctx, req.(*GetWordsPackageReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _WordsService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.WordsService",
	HandlerType: (*WordsServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetWordsPackage",
			Handler:    _WordsService_GetWordsPackage_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "ProtoContracts/WordsServices.proto",
}
